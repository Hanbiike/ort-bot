from aiogram import types, Router, F
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import Message
from ..methods.users import user_lang, update_user_lang
from ..methods.admins import is_admin

router = Router()

async def menu_ru(message: types.Message):
    # Check if user is admin
    if is_admin(message.from_user.id):
        await menu_admin(message)
        return
    
    if message.chat.type != "private":
        await message.answer("üí¨ –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –û–†–¢: @han_ort_bot")
        return
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(
        text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ & –§–∏–∑–∏–∫–∞",
        url="https://t.me/han_ort_math")
    )
    builder.row(types.InlineKeyboardButton(
        text="–†—É—Å—Å–∫–∞—è –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞", url="https://t.me/han_ort_rus")
    )
    builder.row(types.InlineKeyboardButton(
        text="–ö—ã—Ä–≥—ã–∑ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞—Å—ã", url="https://t.me/han_ort_kg")
    )
    builder.row(types.InlineKeyboardButton(
        text="English",
        url="https://t.me/han_ort_eng")
    )
    builder.row(types.InlineKeyboardButton(
        text="–•–∏–º–∏—è & –ë–∏–æ–ª–æ–≥–∏—è", url="https://t.me/han_ort_himbio")
    )
    builder.row(types.InlineKeyboardButton(
        text="CLOUD - RU", url="https://t.me/han_ort_cloud")
    )
    builder.row(types.InlineKeyboardButton(
        text="CLOUD - KG", url="https://t.me/han_jrt_cloud")
    )
    await message.answer("–¢–µ–ø–µ—Ä—å –∂–µ –∫–æ–≥–¥–∞ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ —É—Å–ª–æ–≤–∏—è, –ø–æ–ª—É—á–∏—Ç–µ –≤ –Ω–∞–≥—Ä–∞–¥—É –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∏—Å–∫–∞–ª–∏!", reply_markup=builder.as_markup())
    kb = [
        [
            types.KeyboardButton(text="–ß–µ–∫-–ª–∏—Å—Ç"),
            types.KeyboardButton(text="–ú–∞—Ç–µ—Ä–∏–∞–ª—ã")
        ],
        [
            types.KeyboardButton(text="–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã"),
        ],
        [
            types.KeyboardButton(text="–ü–æ–º–æ—â—å"),
            types.KeyboardButton(text="–Ø–∑—ã–∫ / —Ç–∏–ª")
        ],
        [
            types.KeyboardButton(text="–ü–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ –û–†–¢"),
            types.KeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º?"
    )
    await message.answer("–ß—Ç–æ –∂, –Ω–∞—á–Ω–µ–º –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É!", reply_markup=keyboard)


async def menu_kg(message: types.Message):
    # Check if user is admin
    if is_admin(message.from_user.id):
        await menu_admin(message)
        return
    
    if message.chat.type != "private":
        await message.answer("üí¨ –ñ–†–¢–≥–∞ –¥–∞—è—Ä–¥–∞–Ω—É—É–Ω—É –±–∞—à—Ç–æ–æ “Ø—á“Ø–Ω –∂–µ–∫–µ –±–∏–ª–¥–∏—Ä“Ø“Ø –∂–∞–∑—ã“£—ã–∑: @han_ort_bot")
        return
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(
        text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ & –§–∏–∑–∏–∫–∞",
        url="https://t.me/han_ort_math")
    )
    builder.row(types.InlineKeyboardButton(
        text="–†—É—Å—Å–∫–∞—è –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞", url="https://t.me/han_ort_rus")
    )
    builder.row(types.InlineKeyboardButton(
        text="–ö—ã—Ä–≥—ã–∑ –≥—Ä–∞–º–º–∞—Ç–∫–∞—Å—ã", url="https://t.me/han_ort_kg")
    )
    builder.row(types.InlineKeyboardButton(
        text="English",
        url="https://t.me/han_ort_eng")
    )
    builder.row(types.InlineKeyboardButton(
        text="–•–∏–º–∏—è & –ë–∏–æ–ª–æ–≥–∏—è", url="https://t.me/han_ort_himbio")
    )
    builder.row(types.InlineKeyboardButton(
        text="CLOUD - RU", url="https://t.me/han_ort_cloud")
    )
    builder.row(types.InlineKeyboardButton(
        text="CLOUD - KG", url="https://t.me/han_jrt_cloud")
    )
    await message.answer("–≠–º–∏ —Å–∏–∑ –±–∞—Ä–¥—ã–∫ —à–∞—Ä—Ç—Ç–∞—Ä–¥—ã –∞—Ç–∫–∞—Ä–≥–∞–Ω–¥–∞–Ω –∫–∏–π–∏–Ω, —Å–∏–∑ –∏–∑–¥–µ–≥–µ–Ω –±–µ–∫–µ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä –º–µ–Ω–µ–Ω —Å—ã–π–ª–∞–Ω–∞—Å—ã–∑!", reply_markup=builder.as_markup())
    kb = [
        [
            types.KeyboardButton(text="–ß–µ–∫-–ª–∏—Å—Ç"),
            types.KeyboardButton(text="–ú–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä")
        ],
        [
            types.KeyboardButton(text="–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Ç–µ—Ä"),
        ],
        [
            types.KeyboardButton(text="–ñ–∞—Ä–¥–∞–º"),
            types.KeyboardButton(text="–¢–∏–ª / —è–∑—ã–∫"),
        ],
        [
            types.KeyboardButton(text="–ñ–†–¢ –±–∞–ª–ª–¥–∞—Ä—ã–Ω —ç—Å–µ–ø—Ç”©”©"),
            types.KeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–≠–º–Ω–µ–¥–µ–Ω –±–∞—à—Ç–∞–π–ª—ã?"
    )
    await message.answer("–≠–º–µ—Å–µ –¥–∞—è—Ä–¥–æ–æ–Ω—É –±–∞—à—Ç–∞–π–ª—ã!", reply_markup=keyboard)

async def menu_admin(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(
        text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ & –§–∏–∑–∏–∫–∞",
        url="https://t.me/han_ort_math")
    )
    builder.row(types.InlineKeyboardButton(
        text="–†—É—Å—Å–∫–∞—è –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞", url="https://t.me/han_ort_rus")
    )
    builder.row(types.InlineKeyboardButton(
        text="–ö—ã—Ä–≥—ã–∑ –≥—Ä–∞–º–º–∞—Ç–∫–∞—Å—ã", url="https://t.me/han_ort_kg")
    )
    builder.row(types.InlineKeyboardButton(
        text="English",
        url="https://t.me/han_ort_eng")
    )
    builder.row(types.InlineKeyboardButton(
        text="–•–∏–º–∏—è & –ë–∏–æ–ª–æ–≥–∏—è", url="https://t.me/han_ort_himbio")
    )
    builder.row(types.InlineKeyboardButton(
        text="CLOUD - RU", url="https://t.me/han_ort_cloud")
    )
    builder.row(types.InlineKeyboardButton(
        text="CLOUD - KG", url="https://t.me/han_jrt_cloud")
    )
    await message.answer("–¢–µ–ø–µ—Ä—å –∂–µ –∫–æ–≥–¥–∞ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ —É—Å–ª–æ–≤–∏—è, –ø–æ–ª—É—á–∏—Ç–µ –≤ –Ω–∞–≥—Ä–∞–¥—É –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∏—Å–∫–∞–ª–∏!", reply_markup=builder.as_markup())
    kb = [
        [
            types.KeyboardButton(text="–ß–µ–∫-–ª–∏—Å—Ç"),
            types.KeyboardButton(text="–ú–∞—Ç–µ—Ä–∏–∞–ª—ã")
        ],
        [
            types.KeyboardButton(text="–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã"),
        ],
        [
            types.KeyboardButton(text="–ü–æ–º–æ—â—å"),
            types.KeyboardButton(text="–Ø–∑—ã–∫ / —Ç–∏–ª")
        ],
        [
            types.KeyboardButton(text="–ü–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ –û–†–¢"),
            types.KeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å"),
            types.KeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞"),
            types.KeyboardButton(text="–ê–Ω–æ–Ω—Å")
        ],
        [
            types.KeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º?"
    )
    await message.answer("–ß—Ç–æ –∂, –Ω–∞—á–Ω–µ–º –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É!", reply_markup=keyboard)

@router.message(F.text.lower() == "–º–∞—Ç–µ—Ä–∏–∞–ª—ã")
async def materials_ru(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(
        text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ & –§–∏–∑–∏–∫–∞",
        url="https://t.me/han_ort_math")
    )
    builder.row(types.InlineKeyboardButton(
        text="–†—É—Å—Å–∫–∞—è –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞", url="https://t.me/han_ort_rus")
    )
    builder.row(types.InlineKeyboardButton(
        text="–ö—ã—Ä–≥—ã–∑ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞—Å—ã", url="https://t.me/han_ort_kg")
    )
    builder.row(types.InlineKeyboardButton(
        text="English",
        url="https://t.me/han_ort_eng")
    )
    builder.row(types.InlineKeyboardButton(
        text="–•–∏–º–∏—è & –ë–∏–æ–ª–æ–≥–∏—è", url="https://t.me/han_ort_himbio")
    )
    builder.row(types.InlineKeyboardButton(
        text="CLOUD - RU", url="https://t.me/han_ort_cloud")
    )
    builder.row(types.InlineKeyboardButton(
        text="CLOUD - KG", url="https://t.me/han_jrt_cloud")
    )
    await message.answer("–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∏—Å–∫–∞–ª–∏!", reply_markup=builder.as_markup())

@router.message(F.text.lower() == "–º–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä")
async def materials_kg(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(
        text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ & –§–∏–∑–∏–∫–∞",
        url="https://t.me/han_ort_math")
    )
    builder.row(types.InlineKeyboardButton(
        text="–†—É—Å—Å–∫–∞—è –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞", url="https://t.me/han_ort_rus")
    )
    builder.row(types.InlineKeyboardButton(
        text="–ö—ã—Ä–≥—ã–∑ –≥—Ä–∞–º–º–∞—Ç–∫–∞—Å—ã", url="https://t.me/han_ort_kg")
    )
    builder.row(types.InlineKeyboardButton(
        text="English",
        url="https://t.me/han_ort_eng")
    )
    builder.row(types.InlineKeyboardButton(
        text="–•–∏–º–∏—è & –ë–∏–æ–ª–æ–≥–∏—è", url="https://t.me/han_ort_himbio")
    )
    builder.row(types.InlineKeyboardButton(
        text="CLOUD - RU", url="https://t.me/han_ort_cloud")
    )
    builder.row(types.InlineKeyboardButton(
        text="CLOUD - KG", url="https://t.me/han_jrt_cloud")
    )
    await message.answer("–°–∏–∑ –∏–∑–¥–µ–≥–µ–Ω –±–µ–∫–µ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä!", reply_markup=builder.as_markup())

    
@router.message(F.text.lower() == "—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã")
async def ig(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(
    text="–ê–£–¶–ê",
    url="https://t.me/studauca"))
    builder.row(types.InlineKeyboardButton(
    text="–ê–õ–ê-–¢–û–û",
    url="https://t.me/studalatoo"))
    builder.row(types.InlineKeyboardButton(
    text="–ë–ì–£",
    url="https://t.me/studbgu"))
    builder.row(types.InlineKeyboardButton(
    text="–ö–ù–£ & –ö–ì–Æ–ê",
    url="https://t.me/studknu"))
    builder.row(types.InlineKeyboardButton(
    text="–ö–†–°–£",
    url="https://t.me/studkrsu"))
    builder.row(types.InlineKeyboardButton(
    text="–ú–ê–ù–ê–°",
    url="https://t.me/+GcmvEBnMX4MxMDVi"))
    builder.row(types.InlineKeyboardButton(
    text="–ú–£–ö",
    url="https://t.me/studmuk"))
    builder.row(types.InlineKeyboardButton(
    text="–û–®–ì–£",
    url="https://t.me/+d8FZlWdjmRRlZjZi"))
    builder.row(types.InlineKeyboardButton(
    text="–ü–æ–ª–∏—Ç–µ—Ö –ö–ì–¢–£",
    url="https://t.me/studkstu"))
    builder.row(types.InlineKeyboardButton(
    text="–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –≤—É–∑—ã",
    url="https://t.me/studmedkg"))
    
    await message.reply('–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã:',
    reply_markup=builder.as_markup())

@router.message(F.text.lower() == "—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Ç–µ—Ä")
async def ig(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(
    text="–ê–£–¶–ê",
    url="https://t.me/studauca"))
    builder.row(types.InlineKeyboardButton(
    text="–ê–õ–ê-–¢–û–û",
    url="https://t.me/studalatoo"))
    builder.row(types.InlineKeyboardButton(
    text="–ë–ì–£",
    url="https://t.me/studbgu"))
    builder.row(types.InlineKeyboardButton(
    text="–ö–ù–£ & –ö–ì–Æ–ê",
    url="https://t.me/studknu"))
    builder.row(types.InlineKeyboardButton(
    text="–ö–†–°–£",
    url="https://t.me/studkrsu"))
    builder.row(types.InlineKeyboardButton(
    text="–ú–ê–ù–ê–°",
    url="https://t.me/+GcmvEBnMX4MxMDVi"))
    builder.row(types.InlineKeyboardButton(
    text="–ú–£–ö",
    url="https://t.me/studmuk"))
    builder.row(types.InlineKeyboardButton(
    text="–û–®–ì–£",
    url="https://t.me/+d8FZlWdjmRRlZjZi"))
    builder.row(types.InlineKeyboardButton(
    text="–ü–æ–ª–∏—Ç–µ—Ö –ö–ì–¢–£",
    url="https://t.me/studkstu"))
    builder.row(types.InlineKeyboardButton(
    text="–ú–µ–¥–∏—Ü–∏–Ω–∞–ª—ã–∫ –∂–æ–∂–¥–æ—Ä",
    url="https://t.me/studmedkg"))
    
    await message.reply('–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Ç–µ—Ä:',
    reply_markup=builder.as_markup())


@router.message(F.text.lower() == "—á–µ–∫-–ª–∏—Å—Ç")
async def checklist(message: Message):
    user_id = message.from_user.id
    lang = await user_lang(user_id)
    if (lang == "ru"):
        await message.reply_document("BQACAgIAAxkBAAIdKGaZQf7AVafCmQdH-nBHWSSVUAwzAAK0PQACtniJS-TGlnduvl9fNQQ", caption="–ß–µ–∫-–ª–∏—Å—Ç - –ø–µ—Ä–µ—á–µ–Ω—å —Ç–µ–º, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –Ω–∞ –û–†–¢. –õ–∏—à–Ω–∏—Ö –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ç–µ–º –Ω–µ—Ç, —Ç–æ –µ—Å—Ç—å –Ω–µ –Ω—É–∂–Ω–æ –∏–∑—É—á–∞—Ç—å —Ç–æ, —á—Ç–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ –≤ —á–µ–∫-–ª–∏—Å—Ç–µ")
        await message.answer_document("BQACAgIAAxkBAAIdKmaZQf4uP36Sw3IPeiizu-3FNkXIAAJbNwACF4QQSEYWy3Sk4hxjNQQ", caption="–í—Å–µ —Ñ–æ—Ä–º—É–ª—ã –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞")
    else:
        await message.reply_document("BQACAgIAAxkBAALZr2dciF6699u_aO3yXm-FHn6ZHKJtAAL9PQACtniJS8a7xkayUwcMNgQ", caption="–ß–µ–∫-–ª–∏—Å—Ç - –ñ–†–¢–¥–∞ –±–æ–ª–æ —Ç—É—Ä–≥–∞–Ω —Ç–µ–º–∞–ª–∞—Ä–¥—ã–Ω —Ç–∏–∑–º–µ—Å–∏. –ö–µ—Ä–µ–∫—Å–∏–∑ –∂–µ –∂–µ—Ç–∏—à–ø–µ–≥–µ–Ω —Ç–µ–º–∞–ª–∞—Ä –∂–æ–∫, –±–∞—à–∫–∞—á–∞ –∞–π—Ç–∫–∞–Ω–¥–∞, —á–µ–∫-–ª–∏—Å—Ç—Ç–µ –∫”©—Ä—Å”©—Ç“Ø–ª–±”©–≥”©–Ω –Ω–µ—Ä—Å–µ–ª–µ—Ä–¥–∏ –∏–∑–∏–ª–¥”©”©–Ω“Ø–Ω –∫–µ—Ä–µ–≥–∏ –∂–æ–∫")
        await message.answer_document("BQACAgIAAxkBAAIdKmaZQf4uP36Sw3IPeiizu-3FNkXIAAJbNwACF4QQSEYWy3Sk4hxjNQQ", caption="–ù–µ–≥–∏–∑–≥–∏ —Ç–µ—Å—Ç—Ç–∏–Ω –±–∞–∞—Ä–¥—ã–∫ —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã")


@router.message(F.text.lower() == "–ø–æ–º–æ—â—å")
@router.message(F.text.lower() == "–∂–∞—Ä–¥–∞–º")
async def ig(message: types.Message):
    user_id = message.from_user.id
    lang = await user_lang(user_id)
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(
        text="Telegram",
        url="https://t.me/R_anony"))
    builder.row(types.InlineKeyboardButton(
        text="WhatsApp",
        url="https://wa.me/996700044504"))
    if lang == "kg":
        await message.answer("–ö—É—Ä—Å–∫–∞ –∂–∞–∑—ã–ª–≥—ã–Ω—ã–∑ –∫–µ–ª—Å–µ –∂–µ –∫–µ–Ω–µ—à –∫–µ—Ä–µ–∫ –±–æ–ª—Å–æ –∞–¥–º–∏–Ω–≥–µ –∂–∞–∑—ã–Ω—ã–∑. (–≠–≥–µ—Ä —Å–∏–∑–≥–µ “Ø–π —Ç–∞–ø—à—ã—Ä–º–∞—Å—ã –∂–µ –±–∞—à–∫–∞ —Ç–∞–ø—à—ã—Ä–º–∞ –±–æ—é–Ω—á–∞ –∂–∞—Ä–¥–∞–º –∫–µ—Ä–µ–∫ –±–æ–ª—Å–æ, –∞–Ω–¥–∞ –∞—Ä –±–∏—Ä —Ç–∞–ø—à—ã—Ä–º–∞ “Ø—á“Ø–Ω –∂–∞—Ä–¥–∞–º–¥—ã–Ω –±–∞–∞—Å—ã 100 —Å–æ–º–¥–æ–Ω 1000 —Å–æ–º–≥–æ —á–µ–π–∏–Ω)",
        reply_markup=builder.as_markup())
    else:
        await message.answer("–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å –∏–ª–∏ –∂–µ –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω—É. (–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –¥–æ–º–∞—à–Ω–µ–π —Ä–∞–±–æ—Ç–æ–π –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –∑–∞–¥–∞—á–µ–π, —Ç–æ –ø–æ–º–æ—â—å —Å—Ç–æ–∏—Ç –æ—Ç 100 –¥–æ 1000 —Å–æ–º –∑–∞ –∫–∞–∂–¥–æ–µ –∑–∞–¥–∞–Ω–∏–µ)",
        reply_markup=builder.as_markup())

@router.message(F.text.lower() == "—è–∑—ã–∫ / —Ç–∏–ª")
@router.message(F.text.lower() == "—Ç–∏–ª / —è–∑—ã–∫")
async def cmd_lang(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–†—É—Å—Å–∫–∏–π"),
            types.KeyboardButton(text="–ö—ã—Ä–≥—ã–∑—á–∞")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / —Ç–∏–ª —Ç–∞“£–¥–∞–Ω—ã–∑"
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç–µ —Å–¥–∞–≤–∞—Ç—å –û–†–¢\n\n–ñ–†–¢–Ω—ã —Ç–∞–ø—à—ã—Ä–∞ —Ç—É—Ä–≥–∞–Ω —Ç–∏–ª–¥–∏ —Ç–∞–Ω–¥–∞“£—ã–∑?", reply_markup=keyboard)

@router.message(F.text.lower() == "–∫—ã—Ä–≥—ã–∑—á–∞")
async def lang_kg(message: types.Message):
    user_id = message.from_user.id
    await update_user_lang(user_id, "kg")
    await menu_kg(message)


@router.message(F.text.lower() == "—Ä—É—Å—Å–∫–∏–π")
async def lang_kg(message: types.Message):
    user_id = message.from_user.id
    await update_user_lang(user_id, "ru")
    await menu_ru(message)

@router.message(F.text.lower() == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def main_menu_ru(message: types.Message):
    user_id = message.from_user.id
    await menu_ru(message)

@router.message(F.text.lower() == "–±–∞—à–∫—ã –º–µ–Ω—é")
async def main_menu_kg(message: types.Message):
    user_id = message.from_user.id
    await menu_kg(message)
