from aiogram import Router, F, Bot, types
from aiogram.filters.command import Command
from aiogram.filters import CommandStart
from aiogram.types import Chat
from aiogram.utils.keyboard import InlineKeyboardBuilder

from methods.users import update_user_lang, user_lang
from methods.admins import is_admin
from keyboards import menu
from config import HAN_ID, CHANNEL_ID, BOT_TOKEN

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
# ...existing code...

router = Router()
bot = Bot(token=BOT_TOKEN)

def create_language_keyboard():
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞."""
    kb = [
        [
            types.KeyboardButton(text="–†—É—Å—Å–∫–∏–π —è–∑—ã–∫"),
            types.KeyboardButton(text="–ö—ã—Ä–≥—ã–∑ —Ç–∏–ª–∏")
        ],
    ]
    return types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / —Ç–∏–ª —Ç–∞“£–¥–∞–Ω—ã–∑"
    )

def create_social_media_keyboard():
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(text="Instagram", url="https://www.instagram.com/han.ort245/"))
    builder.row(types.InlineKeyboardButton(text="TikTok", url="https://www.tiktok.com/@askat.ort245"))
    builder.row(types.InlineKeyboardButton(text="YouTube", url="https://www.youtube.com/@han.ort245"))
    builder.row(types.InlineKeyboardButton(text="Telegram", url="https://t.me/+LpE1_DQetocxNjZi"))
    builder.row(types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_podpiska"))
    return builder.as_markup()

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    if message.chat.type != "private":
        await message.answer("üí¨ –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –û–†–¢: @han_ort_bot", reply_markup=types.ReplyKeyboardRemove())
        return
    
    keyboard = create_language_keyboard()
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –û–†–¢. –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç–µ —Å–¥–∞–≤–∞—Ç—å –û–†–¢\n\n"
        "–°–∞–ª–∞–º! –ú–µ–Ω —Å–∏–∑–≥–µ –ñ–†–¢–≥–∞ –¥–∞—è—Ä–¥–∞–Ω—É—É–≥–∞ –∂–∞—Ä–¥–∞–º –±–µ—Ä–µ–º. –ñ–†–¢–Ω—ã —Ç–∞–ø—à—ã—Ä–∞ —Ç—É—Ä–≥–∞–Ω —Ç–∏–ª–¥–∏ —Ç–∞–Ω–¥–∞“£—ã–∑?",
        reply_markup=keyboard
    )

@router.message(F.text.casefold() == "—Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫")
async def lang_ru(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞."""
    if message.chat.type != "private":
        await message.answer("üí¨ –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –û–†–¢: @han_ort_bot", reply_markup=types.ReplyKeyboardRemove())
        return
    
    user_id = message.from_user.id
    await update_user_lang(user_id, "ru")
    await message.reply("–•–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä!", reply_markup=types.ReplyKeyboardRemove())
    keyboard = create_social_media_keyboard()
    await message.answer("–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —è —Ä–∞–±–æ—Ç–∞–ª –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏!", reply_markup=keyboard)

@router.message(F.text.casefold() == "–∫—ã—Ä–≥—ã–∑ —Ç–∏–ª–∏")
async def lang_kg(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫—ã—Ä–≥—ã–∑—Å–∫–æ–≥–æ —è–∑—ã–∫–∞."""
    if message.chat.type != "private":
        await message.answer("üí¨ –ñ–†–¢–≥–∞ –¥–∞—è—Ä–¥–∞–Ω—É—É–Ω—É –±–∞—à—Ç–æ–æ “Ø—á“Ø–Ω –∂–µ–∫–µ –±–∏–ª–¥–∏—Ä“Ø“Ø –∂–∞–∑—ã“£—ã–∑: @han_ort_bot", reply_markup=types.ReplyKeyboardRemove())
        return
    
    user_id = message.from_user.id
    await update_user_lang(user_id, "kg")
    await message.reply("–ñ–∞–∫—à—ã —Ç–∞–Ω–¥–æ–æ!", reply_markup=types.ReplyKeyboardRemove())
    keyboard = create_social_media_keyboard()
    await message.answer("–ú–µ–Ω –∏—à—Ç–µ—à–∏–º “Ø—á“Ø–Ω —Å–æ—Ü—Ç–∞—Ä–º–∞–∫—Ç–∞—Ä—ã–±—ã–∑–≥–∞ –∫–∞—Ç—Ç–∞–ª—ã“£—ã–∑!", reply_markup=keyboard)

@router.callback_query(F.data == "check_podpiska")
async def check_subscription(callback: types.CallbackQuery):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    if callback.message.chat.type != "private":
        await callback.answer("üí¨ –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –û–†–¢: @han_ort_bot", show_alert=True, reply_markup=types.ReplyKeyboardRemove())
        return
    
    try:
        user_id = callback.from_user.id
        user_channel_status = await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)
        lang = await user_lang(user_id)
        
        if is_admin(user_id):
            await callback.answer(text="–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!", show_alert=True)
            await bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)
            await menu.menu_admin(callback.message)
            return
        
        if user_channel_status.status != 'left':
            text = "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!" if lang == "ru" else "–ñ–∞–∑—ã–ª–≥–∞–Ω—ã–∑ “Ø—á“Ø–Ω —Ä–∞—Ö–º–∞—Ç!"
            await callback.answer(text=text, show_alert=True)
            await bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)
            if lang == "ru":
                await menu.menu_ru(callback.message)
            elif lang == "kg":
                await menu.menu_kg(callback.message)
                
    except Exception as e:
        print(f"An error occurred: {e}")
